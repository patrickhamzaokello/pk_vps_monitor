version: "3.3"

networks:
  social-network:
   external: true

volumes:
  data_loki:
    driver: local
  grafana_storage:
    driver: local
  prometheus_data:  # Persist Prometheus data
    driver: local

services:
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "6100:6100"
    command: 
      -config.file=/etc/loki/config.yaml
      
    volumes:
      - ./loki_config/config.yaml:/etc/loki/config.yaml:ro
      - data_loki:/loki:rw

    networks:
      - social-network

    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:6100/ready 2>/dev/null || curl -f http://localhost:6100/ready >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus_config:/etc/prometheus  # Mount your prometheus.yml
      - prometheus_data:/prometheus  # Persist data
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    networks:
      - social-network
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy
      node-exporter:
        condition: service_started
      cadvisor:
        condition: service_started

  node-exporter:  # For host machine metrics (optional)
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - social-network
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  cadvisor:  # For container metrics (optional)
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - social-network
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail_config/promtail-config.yml:/etc/promtail/config.yml  # Mount custom config
      
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - social-network

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
      - GF_SERVER_HTTP_PORT=3200 
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:6100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
    - grafana_storage:/var/lib/grafana
    ports:
      - "3200:3200"
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_started
    networks:
      - social-network